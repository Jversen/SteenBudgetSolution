name: Deploy to Raspberry Pi

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to Raspberry Pi
        env:
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
        run: |
          ssh -o StrictHostKeyChecking=no -p 2222 pi@155.4.68.41 << EOF
            set -e
            cd /home/pi/SteenBudgetSolution

            # Discard any local changes
            echo "Resetting local changes..."
            git reset --hard
            git clean -fd
            
            echo "Current Git Status:"
            git status
            git pull origin master
            echo "After Git Pull:"
            git log -1
            
            # Ensure necessary directories exist
            sudo mkdir -p /var/www/backend
            sudo mkdir -p /var/www/html
            
            # Fix permissions for backend directory
            sudo chmod -R 777 /var/www/backend
            
            # Function to add or update environment variables
            add_or_update_env_var() {
              local var_name=$1
              local new_value=$2
              local service_file=$3

              if sudo grep -q "^Environment=${var_name}=" "$service_file"; then
                local current_value=$(sudo grep "^Environment=${var_name}=" "$service_file" | cut -d'=' -f2-)
                if [ -z "$current_value" ] || [ "$current_value" != "$new_value" ]; then
                  echo "Updating ${var_name} in ${service_file}"
                  sudo sed -i "s|^Environment=${var_name}=.*|Environment=${var_name}=${new_value}|" "$service_file"
                fi
              else
                echo "Adding ${var_name} to ${service_file}"
                echo "Environment=${var_name}=${new_value}" | sudo tee -a "$service_file" > /dev/null
              fi
            }

            service_file="/etc/systemd/system/steenbudget.service"
            
            add_or_update_env_var "JWT_SECRET_KEY" "${JWT_SECRET_KEY}" "$service_file"
            add_or_update_env_var "CONNECTION_STRING" "${CONNECTION_STRING}" "$service_file"

            # Reload systemd daemon and restart service
            sudo systemctl daemon-reload
            sudo systemctl restart steenbudget

            # Publish and deploy backend
            cd Backend
            dotnet publish -c Release -o /var/www/backend
            
            # Build and deploy frontend
            cd ../Frontend
            npm install
            npm run build
            
            # Clean the existing content in /var/www/html before copying
            sudo rm -rf /var/www/html/*
            sudo cp -r build/* /var/www/html/
            sudo systemctl restart nginx
            
            echo "Contents of /var/www/html:"
            ls -l /var/www/html
EOF
